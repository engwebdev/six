{
    "openapi": "3.0.0",
    "info": {
        "title": "API Documentation",
        "description": "API Documentation",
        "contact": {
            "email": "admin@admin.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8001",
            "description": "Documentation API Server"
        }
    ],
    "paths": {
        "/api/userRegister": {
            "post": {
                "tags": [
                    "Register"
                ],
                "summary": "Register the user to receive the SMS verification code.",
                "description": "User Register here",
                "operationId": "userRegister",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "country_name",
                                    "country_code",
                                    "mobile_phone_number"
                                ],
                                "properties": {
                                    "country_name": {
                                        "description": "2 uppercase characters. sample => IR or EN",
                                        "type": "string",
                                        "format": "",
                                        "example": "IR"
                                    },
                                    "country_code": {
                                        "description": "Character '+' with 1 to 3 digits. sample => +1 to +999",
                                        "type": "string",
                                        "format": "int64",
                                        "example": "+98"
                                    },
                                    "mobile_phone_number": {
                                        "description": "digit 10 characters. sample => 9361230099",
                                        "type": "integer",
                                        "format": "number",
                                        "example": "9361230099"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "required": [
                                    "country_name",
                                    "country_code",
                                    "mobile_phone_number"
                                ],
                                "properties": {
                                    "country_name": {
                                        "description": "2 uppercase characters. sample => IR or EN",
                                        "type": "string",
                                        "format": "",
                                        "example": "IR"
                                    },
                                    "country_code": {
                                        "description": "Character '+' with 1 to 3 digits. sample => +1 to +999",
                                        "type": "string",
                                        "format": "int64",
                                        "example": "+98"
                                    },
                                    "mobile_phone_number": {
                                        "description": "digit 10 characters. sample => 9361230099",
                                        "type": "integer",
                                        "format": "number",
                                        "example": "9361230099"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "user Login Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "user Login Successfully"
                                        },
                                        "success": {
                                            "properties": {
                                                "mobile": {
                                                    "type": "array",
                                                    "items": {
                                                        "example": "+989360001234"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "NotificationsEnServer": {
                                            "type": "string",
                                            "example": "The verification code was sent to the mobile number via SMS"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "user Register Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "user Register Successfully"
                                        },
                                        "success": {
                                            "properties": {
                                                "mobile": {
                                                    "type": "array",
                                                    "items": {
                                                        "example": "+989360001234"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "NotificationsEnServer": {
                                            "type": "string",
                                            "example": "The verification code was sent to the mobile number via SMS"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Integrity constraint violation"
                                        },
                                        "errors": {
                                            "properties": {
                                                "mobile_phone_number": {
                                                    "type": "array",
                                                    "items": {
                                                        "example": "The mobile phone number field is unique."
                                                    }
                                                },
                                                "problem": {
                                                    "type": "array",
                                                    "items": {
                                                        "example": "Duplicate entry mobile number"
                                                    }
                                                },
                                                "exception": {
                                                    "type": "array",
                                                    "items": {
                                                        "example": "Sql exception"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Servr error"
                    }
                }
            }
        },
        "/api/userLogin": {
            "post": {
                "tags": [
                    "User Authorization"
                ],
                "summary": "Send unique confirmation code and receive tokens.",
                "description": "Login User Here",
                "operationId": "authLogin",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "verify_code"
                                ],
                                "properties": {
                                    "verify_code": {
                                        "description": "unique code for verify phone number",
                                        "type": "string",
                                        "format": "string",
                                        "example": "rg05sszlqbvz"
                                    },
                                    "country_code": {
                                        "description": "Character '+' with 1 to 3 digits. sample => +1 to +999",
                                        "type": "string",
                                        "format": "string",
                                        "example": "+98"
                                    },
                                    "mobile_phone_number": {
                                        "description": "digit 10 characters. sample => 9361230099",
                                        "type": "integer",
                                        "format": "number",
                                        "example": "9361230099"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "required": [
                                    "verify_code"
                                ],
                                "properties": {
                                    "verify_code": {
                                        "description": "unique code for verify phone number",
                                        "type": "string",
                                        "format": "string",
                                        "example": "rg05sszlqbvz"
                                    },
                                    "country_code": {
                                        "description": "Character '+' with 1 to 3 digits. sample => +1 to +999",
                                        "type": "string",
                                        "format": "string",
                                        "example": "+98"
                                    },
                                    "mobile_phone_number": {
                                        "description": "digit 10 characters. sample => 9361230099",
                                        "type": "integer",
                                        "format": "number",
                                        "example": "9361230099"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "user Login Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": "31536000"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "string of token"
                                        },
                                        "refresh_token": {
                                            "type": "string",
                                            "example": "string of refresh token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "User creation and login completed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": "31536000"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "string of token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/userLogout": {
            "get": {
                "tags": [
                    "User Authorization"
                ],
                "summary": "User Logging Out",
                "description": "user log",
                "operationId": "getUserLogout",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "logout Successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/userLoginByCode": {
            "post": {
                "tags": [
                    "userAuth"
                ],
                "summary": "list of all errors for api",
                "description": "User Login here",
                "operationId": "userLoginByCode",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "admin@admin.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "123456789"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "user Login Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": "31536000"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "string of token"
                                        },
                                        "refresh_token": {
                                            "type": "string",
                                            "example": "string of refresh token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "User creation and login completed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": "31536000"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "string of token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "406": {
                        "description": "Not Acceptable"
                    },
                    "407": {
                        "description": "Proxy Authentication Required"
                    },
                    "410": {
                        "description": "Resource Gone"
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "423": {
                        "description": "Resource Locked"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "451": {
                        "description": "Unavailable For Legal Reasons"
                    },
                    "500": {
                        "description": "Internal Server"
                    },
                    "502": {
                        "description": "Bad Gateway"
                    },
                    "503": {
                        "description": "Service Unavailable"
                    },
                    "504": {
                        "description": "Gateway Timeout"
                    },
                    "505": {
                        "description": "HTTP Version Not Supported"
                    },
                    "511": {
                        "description": "Network Authentication Required"
                    }
                }
            }
        },
        "/api/newTokenByRefreshToken": {
            "post": {
                "tags": [
                    "Authorization By Token"
                ],
                "summary": "helper method for getting tokens",
                "description": "helper method for getting tokens by 'Refresh Token'",
                "operationId": "newTokenByRefreshToken",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "refresh_token"
                                ],
                                "properties": {
                                    "refresh_token": {
                                        "description": "very long string : jwt token",
                                        "type": "string",
                                        "format": "string",
                                        "example": "very long string : jwt token"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "required": [
                                    "refresh_token"
                                ],
                                "properties": {
                                    "refresh_token": {
                                        "description": "very long string : jwt token",
                                        "type": "string",
                                        "format": "string",
                                        "example": "very long string : jwt token"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "user Login Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": "31536000"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "string of token"
                                        },
                                        "refresh_token": {
                                            "type": "string",
                                            "example": "string of refresh token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/newTokenByOldToken": {
            "post": {
                "tags": [
                    "Authorization By Token"
                ],
                "summary": "helper method for getting tokens",
                "description": "helper method for getting tokens by 'Old Token'",
                "operationId": "newTokenByOldToken",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "old_access_token"
                                ],
                                "properties": {
                                    "old_access_token": {
                                        "description": "very long string : jwt token",
                                        "type": "string",
                                        "format": "string",
                                        "example": "very long string : jwt token"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "required": [
                                    "old_access_token"
                                ],
                                "properties": {
                                    "old_access_token": {
                                        "description": "very long string : jwt token",
                                        "type": "string",
                                        "format": "string",
                                        "example": "very long string : jwt token"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "user Login Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": "31536000"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "string of token"
                                        },
                                        "refresh_token": {
                                            "type": "string",
                                            "example": "string of refresh token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "responses": {
            "403": {
                "description": "forbidden"
            },
            "404": {
                "description": "Resource Not Found"
            }
        },
        "securitySchemes": {
            "bearer": {
                "type": "http",
                "description": "Authorization token obtained from logging in. Just enter the amount of the token.",
                "name": "Authorization",
                "in": "header",
                "scheme": "Bearer"
            },
            "passport": {
                "type": "oauth2",
                "description": "Laravel passport oauth2 security.",
                "in": "header",
                "scheme": "https",
                "flows": {
                    "password": {
                        "authorizationUrl": "http://localhost/api/v1/authorize",
                        "tokenUrl": "http://localhost/api/v1/token",
                        "refreshUrl": "http://localhost/api/v1/token/refresh",
                        "scopes": []
                    }
                }
            }
        }
    },
    "security": [
        []
    ]
}